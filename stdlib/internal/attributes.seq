@__attribute__
def test():
    pass

@__attribute__
def export():
    pass

@__attribute__
def inline():
    pass

@__attribute__
def noinline():
    pass

@__attribute__
def pure():
    pass

@__attribute__
def nonpure():
    pass

@__attribute__
def commutative():
    pass

@__attribute__
def associative():
    pass

@__attribute__
def distributive():
    pass

@__attribute__
def C():
    pass

# The propagate annot means that the function can be freely copy propagated around (assuming the parameters are also propagatable). It implies that the annotated
# function is also pure
@__attribute__
def propagate():
    pass

# Means that we can directly extract the arguments to the function and basically ignore the function call. Really
# only should be used with name tuple's __new__ functions where the function just returns the tuple
@__attribute__
def extract():
    pass
