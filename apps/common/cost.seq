import math

def sad(A, B):
  c = 0
  for a,b in zip(A,B):
    c += abs(int(a)-int(b))
  return c

def ssd(A, B):
  c = 0
  for a,b in zip(A,B):
    c += (int(a)-int(b))**2
  return c

def mse(A, B):
  c = ssd(A,B)
  return float(c)/float(len(A))

def mad(A, B):
  c = sad(A,B)
  return float(c)/float(len(A))

def J(orig, recons, R, qp):
  lda = 0.852**(qp-12)/3
  D = float(ssd(orig,recons))
  return D + lda * float(R)

def intra_sad(A):
  avg = 0
  for a in A:
    avg += a
  avg //= len(A)
  cost = 0
  for a in A:
    cost += abs(a-avg)
  return cost

# gt = ground truth
# cmp = compare with gt
def psnr(gt, cmp):
  mse = float(mse(gt, cmp))
  psnr = 10 * math.log10(((2**8 - 1) ** 2) / mse)
  return psnr   